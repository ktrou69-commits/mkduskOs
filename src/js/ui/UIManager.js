/**
 * –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
 */
import { formatDate, escapeHtml } from '../utils/helpers.js';
import { getCategoryName, getCategoryIcon } from '../config/categories.js';

export class UIManager {
    constructor() {
        this.currentCategory = 'trees';
        this.currentItem = null;
        this.currentItemId = null;
        this.bulkSelectMode = false;
        this.selectedItems = new Set();
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç UI
     */
    init() {
        this.setupEventListeners();
        this.updateStats();
        this.showWelcomeScreen();
        console.log('‚úÖ UI Manager initialized');
    }

    /**
     * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
     */
    setupEventListeners() {
        // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        document.querySelectorAll('.category-tab').forEach(tab => {
            tab.addEventListener('click', () => {
                this.switchCategory(tab.dataset.category);
            });
        });

        // –ü–æ–∏—Å–∫
        const searchInput = document.getElementById('searchInput');
        if (searchInput) {
            searchInput.addEventListener('input', (e) => {
                this.handleSearch(e.target.value);
            });
        }

        // –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
        this.setupModalEventListeners();
    }

    /**
     * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
     */
    setupModalEventListeners() {
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
        document.querySelectorAll('.modal-close').forEach(button => {
            button.addEventListener('click', (e) => {
                const modal = e.target.closest('.modal');
                if (modal) {
                    this.closeModal(modal.id);
                }
            });
        });

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –Ω–∞ —Ñ–æ–Ω
        document.querySelectorAll('.modal').forEach(modal => {
            modal.addEventListener('click', (e) => {
                if (e.target === modal) {
                    this.closeModal(modal.id);
                }
            });
        });
    }

    /**
     * –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏—é
     */
    switchCategory(category) {
        this.currentCategory = category;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É
        document.querySelectorAll('.category-tab').forEach(tab => {
            tab.classList.remove('active');
        });
        document.querySelector(`[data-category="${category}"]`).classList.add('active');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç—ã –∫–Ω–æ–ø–æ–∫
        this.updateButtonTexts(category);
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±–æ—Ä
        this.currentItem = null;
        this.currentItemId = null;
        this.bulkSelectMode = false;
        this.selectedItems.clear();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        this.renderItemsList();
        this.updateStats();
        this.showWelcomeScreen();
        
        console.log(`üîÑ Switched to category: ${category}`);
    }

    /**
     * –û–±–Ω–æ–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç—ã –∫–Ω–æ–ø–æ–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
     */
    updateButtonTexts(category) {
        const isTreesCategory = category === 'trees';
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç—ã –∫–Ω–æ–ø–æ–∫
        const createBtnText = document.getElementById('createBtnText');
        const createFirstBtnText = document.getElementById('createFirstBtnText');
        const createSampleBtnText = document.getElementById('createSampleBtnText');
        const searchInput = document.getElementById('searchInput');
        const exportBtnText = document.getElementById('exportBtnText');

        if (createBtnText) createBtnText.textContent = isTreesCategory ? '–°–æ–∑–¥–∞—Ç—å –¥–µ—Ä–µ–≤–æ' : '–°–æ–∑–¥–∞—Ç—å –∑–∞–º–µ—Ç–∫—É';
        if (createFirstBtnText) createFirstBtnText.textContent = isTreesCategory ? '–°–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤–æ–µ –¥–µ—Ä–µ–≤–æ' : '–°–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—É—é –∑–∞–º–µ—Ç–∫—É';
        if (createSampleBtnText) createSampleBtnText.textContent = isTreesCategory ? '–°–æ–∑–¥–∞—Ç—å –ø—Ä–∏–º–µ—Ä –¥–µ—Ä–µ–≤–∞' : '–°–æ–∑–¥–∞—Ç—å –ø—Ä–∏–º–µ—Ä –∑–∞–º–µ—Ç–∫–∏';
        if (searchInput) searchInput.placeholder = isTreesCategory ? '–ü–æ–∏—Å–∫ –¥–µ—Ä–µ–≤—å–µ–≤...' : '–ü–æ–∏—Å–∫ –∑–∞–º–µ—Ç–æ–∫...';
        if (exportBtnText) exportBtnText.textContent = isTreesCategory ? '–≠–∫—Å–ø–æ—Ä—Ç –¥–µ—Ä–µ–≤—å–µ–≤' : '–≠–∫—Å–ø–æ—Ä—Ç –∑–∞–º–µ—Ç–æ–∫';

        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫—Ä–∞–Ω
        const welcomeIcon = document.querySelector('.welcome-icon');
        const welcomeTitle = document.querySelector('.welcome-content h2');
        const welcomeText = document.querySelector('.welcome-content p');

        if (welcomeIcon) welcomeIcon.textContent = isTreesCategory ? 'üå≥' : 'üìù';
        if (welcomeTitle) {
            welcomeTitle.textContent = isTreesCategory 
                ? '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ë–∏–±–ª–∏–æ—Ç–µ–∫—É –î—Ä–µ–≤ –ó–Ω–∞–Ω–∏–π'
                : '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ê—Ä—Ö–∏–≤ –ó–∞–º–µ—Ç–æ–∫';
        }
        if (welcomeText) {
            welcomeText.textContent = isTreesCategory
                ? '–°–æ–∑–¥–∞–≤–∞–π—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–µ—Ä–µ–≤—å—è –∑–Ω–∞–Ω–∏–π –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –∏–¥–µ–π'
                : '–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∏ –æ—Ä–≥–∞–Ω–∏–∑—É–π—Ç–µ –∑–∞–º–µ—Ç–∫–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –≤–∞–∂–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏';
        }
    }

    /**
     * –†–µ–Ω–¥–µ—Ä–∏—Ç —Å–ø–∏—Å–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
     */
    renderItemsList(items = null) {
        const container = document.getElementById('treesList');
        if (!container) {
            console.error('‚ùå Container treesList not found!');
            return;
        }

        // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω—ã, –ø–æ–ª—É—á–∞–µ–º –∏—Ö —á–µ—Ä–µ–∑ —Å–æ–±—ã—Ç–∏–µ
        if (!items) {
            const event = new CustomEvent('requestItems', { 
                detail: { category: this.currentCategory } 
            });
            document.dispatchEvent(event);
            return;
        }

        const itemType = this.currentCategory === 'trees' ? '–¥–µ—Ä–µ–≤—å–µ–≤' : '–∑–∞–º–µ—Ç–æ–∫';
        const itemIcon = this.currentCategory === 'trees' ? 'üå≥' : 'üìù';

        if (items.length === 0) {
            container.innerHTML = `
                <div class="empty-state">
                    <div class="empty-state-icon">${itemIcon}</div>
                    <div class="empty-state-text">–ù–µ—Ç ${itemType}</div>
                    <div class="empty-state-subtext">–°–æ–∑–¥–∞–π—Ç–µ ${this.currentCategory === 'trees' ? '–ø–µ—Ä–≤–æ–µ –¥–µ—Ä–µ–≤–æ –∑–Ω–∞–Ω–∏–π' : '–ø–µ—Ä–≤—É—é –∑–∞–º–µ—Ç–∫—É'}</div>
                </div>
            `;
            return;
        }

        container.innerHTML = items.map(item => `
            <div class="tree-item ${this.bulkSelectMode ? 'bulk-select-mode' : ''}" data-tree-id="${item.id}">
                ${this.bulkSelectMode ? `
                    <input type="checkbox" class="tree-item-checkbox" 
                           ${this.selectedItems.has(item.id) ? 'checked' : ''}
                           onchange="window.uiManager.toggleItemSelection('${item.id}'); event.stopPropagation();">
                ` : ''}
                <div class="tree-item-content" onclick="${this.bulkSelectMode ? `window.uiManager.toggleItemSelection('${item.id}')` : `window.uiManager.selectItem('${item.id}')`}">
                    <div class="tree-item-title">${escapeHtml(item.name)}</div>
                    <div class="tree-item-meta">
                        <span class="tree-category">${getCategoryName(item.category)}</span>
                        <span>${formatDate(item.createdAt)}</span>
                    </div>
                </div>
                ${!this.bulkSelectMode ? `
                    <div class="tree-item-actions">
                        <button class="btn btn-icon tree-delete-btn" onclick="window.uiManager.deleteItem('${item.id}'); event.stopPropagation();" title="–£–¥–∞–ª–∏—Ç—å ${this.currentCategory === 'trees' ? '–¥–µ—Ä–µ–≤–æ' : '–∑–∞–º–µ—Ç–∫—É'}">
                            <span class="icon">üóëÔ∏è</span>
                        </button>
                    </div>
                ` : ''}
            </div>
        `).join('');

        console.log(`‚úÖ Rendered ${items.length} items in sidebar`);
    }

    /**
     * –í—ã–±–∏—Ä–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç
     */
    selectItem(id) {
        console.log('üîç Selecting item with ID:', id);
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞
        const event = new CustomEvent('selectItem', { 
            detail: { id, category: this.currentCategory } 
        });
        document.dispatchEvent(event);
    }

    /**
     * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
     */
    displaySelectedItem(item) {
        if (!item) return;

        this.currentItem = item;
        this.currentItemId = item.id;
        
        console.log('‚úÖ Displaying item:', item.name);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        const titleElement = document.getElementById('currentTreeTitle');
        const dateElement = document.getElementById('currentTreeDate');
        const nodesElement = document.getElementById('currentTreeNodes');
        
        if (titleElement) titleElement.textContent = item.name;
        if (dateElement) dateElement.textContent = `–°–æ–∑–¥–∞–Ω–æ: ${formatDate(item.createdAt)}`;
        if (nodesElement) {
            nodesElement.textContent = this.currentCategory === 'trees' ? '–î–µ—Ä–µ–≤–æ –∑–Ω–∞–Ω–∏–π' : '–ó–∞–º–µ—Ç–∫–∞';
        }

        // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        this.renderCurrentItemContent(item);
        this.hideWelcomeScreen();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ —Å–ø–∏—Å–∫–µ
        this.updateActiveState(item.id);
    }

    /**
     * –†–µ–Ω–¥–µ—Ä–∏—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–µ–∫—É—â–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
     */
    renderCurrentItemContent(item) {
        const container = document.getElementById('treeContent');
        if (!container) return;

        let content = '';

        if (this.currentCategory === 'notes') {
            // –î–ª—è –∑–∞–º–µ—Ç–æ–∫ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
            if (item.content && item.content.trim()) {
                content = `<div class="console-line console-content">${escapeHtml(item.content)}</div>`;
            } else {
                content = `<div class="console-line console-content" style="color: #6e7681; font-style: italic;">üìù –ó–∞–º–µ—Ç–∫–∞ –ø—É—Å—Ç–∞—è</div>`;
            }
        } else {
            // –î–ª—è –¥–µ—Ä–µ–≤—å–µ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
            if (item.description && item.description.trim()) {
                content = `<div class="console-line console-content">${escapeHtml(item.description)}</div>`;
            } else {
                content = `<div class="console-line console-content" style="color: #6e7681; font-style: italic;">üìù –î–µ—Ä–µ–≤–æ –ø—É—Å—Ç–æ–µ - –¥–æ–±–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ</div>`;
            }
        }

        container.innerHTML = content;
    }

    /**
     * –û–±–Ω–æ–≤–ª—è–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ —Å–ø–∏—Å–∫–µ
     */
    updateActiveState(id) {
        document.querySelectorAll('.tree-item').forEach(item => {
            item.classList.remove('active');
        });
        
        const activeItem = document.querySelector(`[data-tree-id="${id}"]`);
        if (activeItem) {
            activeItem.classList.add('active');
        }
    }

    /**
     * –£–¥–∞–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç
     */
    deleteItem(id) {
        console.log('üóëÔ∏è Delete button clicked for ID:', id);
        
        const itemType = this.currentCategory === 'trees' ? '–¥–µ—Ä–µ–≤–æ' : '–∑–∞–º–µ—Ç–∫—É';
        if (confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç${this.currentCategory === 'trees' ? '–æ' : '—É'} ${itemType}?`)) {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
            const event = new CustomEvent('deleteItem', { 
                detail: { id, category: this.currentCategory } 
            });
            document.dispatchEvent(event);
        }
    }

    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–∏—Å–∫
     */
    handleSearch(query) {
        const event = new CustomEvent('searchItems', { 
            detail: { query, category: this.currentCategory } 
        });
        document.dispatchEvent(event);
    }

    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫—Ä–∞–Ω
     */
    showWelcomeScreen() {
        const welcomeScreen = document.getElementById('welcomeScreen');
        const treeViewer = document.getElementById('treeViewer');
        
        if (welcomeScreen) welcomeScreen.style.display = 'flex';
        if (treeViewer) treeViewer.style.display = 'none';
    }

    /**
     * –°–∫—Ä—ã–≤–∞–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫—Ä–∞–Ω
     */
    hideWelcomeScreen() {
        const welcomeScreen = document.getElementById('welcomeScreen');
        const treeViewer = document.getElementById('treeViewer');
        
        if (welcomeScreen) welcomeScreen.style.display = 'none';
        if (treeViewer) treeViewer.style.display = 'flex';
    }

    /**
     * –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
     */
    updateStats(stats = null) {
        if (!stats) {
            // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —á–µ—Ä–µ–∑ —Å–æ–±—ã—Ç–∏–µ
            const event = new CustomEvent('requestStats');
            document.dispatchEvent(event);
            return;
        }

        const treesElement = document.getElementById('totalTrees');
        const nodesElement = document.getElementById('totalNodes');
        
        if (treesElement) treesElement.textContent = stats.treesCount || 0;
        if (nodesElement) nodesElement.textContent = stats.totalNodes || 0;
    }

    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
     */
    showNotification(message, type = 'info') {
        const notification = document.getElementById('notification');
        if (!notification) return;

        notification.textContent = message;
        notification.className = `notification ${type}`;
        notification.style.display = 'block';

        setTimeout(() => {
            notification.style.display = 'none';
        }, 3000);
    }

    /**
     * –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
     */
    openModal(modalId) {
        const modal = document.getElementById(modalId);
        if (modal) {
            modal.classList.add('active');
        }
    }

    /**
     * –ó–∞–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
     */
    closeModal(modalId) {
        const modal = document.getElementById(modalId);
        if (modal) {
            modal.classList.remove('active');
        }
    }

    /**
     * –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç —Ä–µ–∂–∏–º –º–∞—Å—Å–æ–≤–æ–≥–æ –≤—ã–±–æ—Ä–∞
     */
    toggleBulkSelectMode() {
        this.bulkSelectMode = !this.bulkSelectMode;
        this.selectedItems.clear();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        this.renderItemsList();
        
        const bulkActions = document.getElementById('bulkActions');
        const bulkDeleteBtn = document.getElementById('bulkDeleteBtn');
        
        if (bulkActions) {
            bulkActions.style.display = this.bulkSelectMode ? 'flex' : 'none';
        }
        if (bulkDeleteBtn) {
            bulkDeleteBtn.style.display = this.bulkSelectMode ? 'inline-flex' : 'none';
        }
    }

    /**
     * –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –≤—ã–±–æ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ –º–∞—Å—Å–æ–≤–æ–≥–æ –≤—ã–±–æ—Ä–∞
     */
    toggleItemSelection(id) {
        if (this.selectedItems.has(id)) {
            this.selectedItems.delete(id);
        } else {
            this.selectedItems.add(id);
        }
        
        this.updateBulkDeleteButton();
    }

    /**
     * –û–±–Ω–æ–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É –º–∞—Å—Å–æ–≤–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
     */
    updateBulkDeleteButton() {
        const bulkDeleteBtn = document.getElementById('bulkDeleteBtn');
        const bulkDeleteText = document.getElementById('bulkDeleteText');
        
        if (bulkDeleteBtn && bulkDeleteText) {
            const count = this.selectedItems.size;
            bulkDeleteText.textContent = count > 0 ? `–£–¥–∞–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ (${count})` : '–£–¥–∞–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ';
            bulkDeleteBtn.disabled = count === 0;
        }
    }
}
